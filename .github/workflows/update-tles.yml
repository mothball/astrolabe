name: Update TLEs

on:
  schedule:
    # Every 2 hours at :17 past the hour (UTC) — not at :00 or :30
    - cron: '17 */2 * * *'

  # Allow manual trigger from GitHub UI
  workflow_dispatch:
    inputs:
      source:
        description: 'TLE source to update'
        required: false
        default: 'active'
        type: choice
        options:
          - active
          - all
          - stations
          - starlink

  # Run on push to main (for testing)
  push:
    branches: [main]
    paths:
      - 'scripts/update_tles.py'
      - '.github/workflows/update-tles.yml'

jobs:
  update:
    runs-on: ubuntu-latest
    name: Update TLE Database

    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Cache dependencies
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install supabase requests python-dateutil python-dotenv

      # Step 5: Run the update script
      - name: Update TLEs
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          python scripts/update_tles.py

      # Step 6: Create summary (optional)
      - name: Create job summary
        if: always()
        run: |
          echo "## TLE Update Summary 🛰️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Run time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY